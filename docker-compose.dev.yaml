services:
  backend:
    container_name: weather.backend.dev
    build:
      context: backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - ${API_PORT}:3000
    depends_on:
      - database
      - redis
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - pg-network

  database:
    container_name: weather.postgres.dev
    image: postgres:16.4-alpine
    env_file:
      - .env.dev
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - pg-network

  pgadmin:
    container_name: weather.pgadmin.dev
    image: dpage/pgadmin4
    env_file:
      - .env.dev
    ports:
      - ${PGADMIN_DEFAULT_PORT}:80
    depends_on:
      - database
    networks:
      - pg-network

  redis:
    container_name: weather.redis.dev
    image: redis:latest
    env_file:
      - .env.dev
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./data/redis:/data
    networks:
      - pg-network

networks:
  pg-network:
    driver: bridge